{"version":3,"sources":["components/ProjectList/styles.js","components/ProjectItem/styles.js","components/ProjectItem/index.js","components/ProjectItems/index.js","components/ProjectList/index.js","components/ProjectList/wrapper.js","App.js","reportWebVitals.js","index.js"],"names":["ProjectListBox","styled","div","ProjetListCard","ProjectListCardName","p","ProjectItemBox","ProjectItemModal","ProjectItem","props","data","useState","modalOpen","setModalOpen","handleClick","onClick","content","date","ProjectItems","map","d","key","ProjectList","Object","keys","name","tasks","ProjectListWrapper","setData","useEffect","fetch","then","res","json","response","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAEaA,EAAiBC,IAAOC,IAAV,8DAKdC,EAAiBF,IAAOC,IAAV,wUAedE,EAAsBH,IAAOI,EAAV,8DCpBnBC,EAAiBL,IAAOC,IAAV,sKASdK,EAAmBN,IAAOC,IAAV,mV,OCiBdM,MAxBf,SAAqBC,GAAQ,IACnBC,EAASD,EAATC,KADkB,EAGQC,oBAAS,GAHjB,mBAGnBC,EAHmB,KAGRC,EAHQ,KAKpBC,EAAc,kBAAMD,GAAcD,IAExC,OACE,qCACE,eAAC,EAAD,CAAmBG,QAASD,EAA5B,UACE,4BAAIJ,EAAKM,UACT,4BAAIN,EAAKO,UAEVL,GACC,eAAC,EAAD,WACE,mBAAGG,QAASD,EAAZ,eACA,4BAAIJ,EAAKM,UACT,4BAAIN,EAAKO,cCRJC,MARf,SAAsBT,GAAQ,IACpBC,EAASD,EAATC,KAER,OACE,8BAAMA,EAAKS,KAAI,SAACC,EAAGC,GAAJ,OAAY,cAAC,EAAD,CAAuBX,KAAMU,GAAXC,SCalCC,MAjBf,SAAqBb,GAAQ,IACnBC,EAASD,EAATC,KAER,OACEA,GACE,cAAC,EAAD,UACGa,OAAOC,KAAKd,GAAMS,KAAI,SAACE,GAAD,OACrB,eAAC,EAAD,WACE,cAAC,EAAD,UAAyBX,EAAKW,GAAKI,OACnC,cAAC,EAAD,CAAaf,KAAMA,EAAKW,GAAKK,iBCE1BC,MAZf,WAA+B,IAAD,EACJhB,mBAAS,MADL,mBACrBD,EADqB,KACfkB,EADe,KAS5B,OANAC,qBAAU,WACRC,MAAM,6CAA6CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAArB,GAC9EkB,EAAQlB,EAAKwB,eAEd,IAEI,cAAC,EAAD,CAAaxB,KAAMA,KCMbyB,MAbf,WACE,OACE,sBAAKC,UAAU,cAAf,UACE,iCACE,6CAEF,8BACE,cAAC,EAAD,UCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8c8adf0a.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const ProjectListBox = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nexport const ProjetListCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 3rem 2rem;\n  border-radius: 0.5rem;\n  border: 1px solid black;\n  // height: 10rem;\n  margin: 0 2rem;\n  transition: all 0.2s ease 0s;\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: rgba(84, 84, 84, 0.2) 0px 5px 30px;\n  }\n`\n\nexport const ProjectListCardName = styled.p`\n  font-size: 2rem;\n  margin: 0;\n`\n","import styled from 'styled-components'\n\nexport const ProjectItemBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid grey;\n  border-radius: 0.5rem;\n  padding: 0.5rem;\n  cursor: pointer;\n`\n\nexport const ProjectItemModal = styled.div`\n  justify-content: center;\n  align-items: center;\n  width: 30rem;\n  height: 20rem;\n  position: fixed;\n  z-index: 10;\n  top: 50%; left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  filter: drop-shadow(4px 4px 4px rgba(0, 0, 0, 0.25));\n  border-radius: 2rem;\n  padding: 1rem;\n`","import React, { useState } from 'react'\n\nimport * as SC from './styles'\n\nfunction ProjectItem(props) {\n  const { data } = props\n\n  const [modalOpen, setModalOpen] = useState(false)\n\n  const handleClick = () => setModalOpen(!modalOpen)\n\n  return (\n    <>\n      <SC.ProjectItemBox onClick={handleClick}>\n        <p>{data.content}</p>\n        <p>{data.date}</p>\n      </SC.ProjectItemBox>\n      {modalOpen && (\n        <SC.ProjectItemModal>\n          <p onClick={handleClick}>x</p>\n          <p>{data.content}</p>\n          <p>{data.date}</p>\n        </SC.ProjectItemModal>\n      )}\n    </>\n  )\n}\n\nexport default ProjectItem","import React from 'react'\nimport * as SC from './styles'\n\nimport ProjectItem from '../ProjectItem/index'\n\nfunction ProjectItems(props) {\n  const { data } = props\n\n  return (\n    <div>{data.map((d, key) => <ProjectItem key={key} data={d}/> )}</div>\n  )\n}\n\nexport default ProjectItems","import React from 'react'\nimport * as SC from './styles'\n\nimport ProjectItem from '../ProjectItems/index'\n\nfunction ProjectList(props) {\n  const { data } = props\n\n  return (\n    data && (\n      <SC.ProjectListBox>\n        {Object.keys(data).map((key) => (\n          <SC.ProjetListCard>\n            <SC.ProjectListCardName>{data[key].name}</SC.ProjectListCardName>\n            <ProjectItem data={data[key].tasks} />\n          </SC.ProjetListCard>\n        ))}\n      </SC.ProjectListBox>\n    )\n  )\n}\n\nexport default ProjectList","import React, { useEffect, useState } from 'react';\n\nimport ProjectList from './index';\n\nfunction ProjectListWrapper() {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    fetch('http://192.168.1.102:5000/projectWithTask').then(res => res.json()).then(data => {\n      setData(data.response)\n    })\n  }, [])\n\n  return <ProjectList data={data}/>\n}\n\nexport default ProjectListWrapper","import './App.css'\nimport React from 'react'\n\nimport ProjectListWrapper from './components/ProjectList/wrapper'\n\n\nfunction App() {\n  return (\n    <div className=\"HighWrapper\">\n      <header>\n        <h1>DevoirBot</h1>\n      </header>\n      <div>\n        <ProjectListWrapper />\n      </div>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}