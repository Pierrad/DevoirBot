{"version":3,"sources":["components/ProjectList/styles.js","components/ProjectItem/styles.js","components/ProjectItem/index.js","components/ProjectItems/index.js","components/ProjectList/index.js","components/ProjectList/wrapper.js","App.js","reportWebVitals.js","index.js"],"names":["ProjectListBox","styled","div","ProjetListCard","ProjectListCardName","p","props","color","ProjectItemBox","ProjectItemModalContainer","ProjectItemModal","ProjectItemModalCloseButton","ProjectItemModalContent","ProjectItemModalBasicText","ProjectItem","data","useState","modalOpen","setModalOpen","handleClick","onClick","content","date","src","alt","ProjectItems","map","d","key","ProjectList","setColor","colorLoader","Math","floor","random","toString","useEffect","Array","Object","keys","length","i","name","tasks","loading","css","size","ProjectListWrapper","setData","fetch","then","res","json","response","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEaA,EAAiBC,IAAOC,IAAV,8GAOdC,EAAiBF,IAAOC,IAAV,6YAmBdE,EAAsBH,IAAOI,EAAV,6EAGrB,SAACC,GAAD,OAAWA,EAAMC,S,iBC7BfC,EAAiBP,IAAOC,IAAV,8LAUdO,EAA4BR,IAAOC,IAAV,6IASzBQ,EAAmBT,IAAOC,IAAV,8YAmBhBS,EAA8BV,IAAOC,IAAV,uFAM3BU,EAA0BX,IAAOC,IAAV,mDAIvBW,EAA4BZ,IAAOI,EAAV,sE,OCbvBS,MAjCf,SAAqBR,GAAQ,IACnBS,EAAST,EAATS,KADkB,EAGQC,oBAAS,GAHjB,mBAGnBC,EAHmB,KAGRC,EAHQ,KAKpBC,EAAc,WAClBD,GAAcD,IAGhB,OACE,qCACE,eAAC,EAAD,CAAmBG,QAASD,EAA5B,UACE,4BAAIJ,EAAKM,UACT,4BAAIN,EAAKO,UAEVL,GACC,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAgCG,QAASD,EAAzC,SAAsD,qBAAKI,IAAI,aAAaC,IAAI,iBAChF,eAAC,EAAD,WACE,cAAC,EAAD,yBACA,4BAAIT,EAAKM,UACT,cAAC,EAAD,yBACA,4BAAIN,EAAKO,mBCdRG,MARf,SAAsBnB,GAAQ,IACpBS,EAAST,EAATS,KAER,OACE,8BAAMA,EAAKW,KAAI,SAACC,EAAGC,GAAJ,OAAY,cAAC,EAAD,CAAuBb,KAAMY,GAAXC,SC8BlCC,MAhCf,SAAqBvB,GAAQ,IACnBS,EAAST,EAATS,KADkB,EAEAC,mBAAS,MAFT,mBAEnBT,EAFmB,KAEZuB,EAFY,KAGpBC,EAAc,IAAMC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAaxE,OANAC,qBAAU,WACJrB,GACFe,EAAS,YAAIO,MAAMC,OAAOC,KAAKxB,GAAMyB,QAAQD,QAAQb,KAAI,SAACE,GAAD,MAAS,IAAMI,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,UAEvH,CAACpB,IAGDA,GACC,cAAC,EAAD,UACGuB,OAAOC,KAAKxB,GAAMW,KAAI,SAACE,EAAKa,GAAN,OACrB,mCACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAwBlC,MAAOA,EAAQA,EAAMkC,GAAK,OAAlD,SAA2D1B,EAAKa,GAAKc,OACrE,cAAC,EAAD,CAAa3B,KAAMA,EAAKa,GAAKe,UAFPF,WAO1B,cAAC,IAAD,CAAclC,MAAOwB,EAAaa,SAAS,EAAMC,IAvB7C,iDAuB0DC,KAAM,MCnB/DC,MAZf,WAA+B,IAAD,EACJ/B,mBAAS,MADL,mBACrBD,EADqB,KACfiC,EADe,KAS5B,OANAZ,qBAAU,WACRa,MAAM,oDAAoDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAnC,GACrFiC,EAAQjC,EAAKsC,eAEd,IAEI,cAAC,EAAD,CAAatC,KAAMA,KCMbuC,MAbf,WACE,OACE,sBAAKC,UAAU,cAAf,UACE,qBAAKA,UAAU,QAAf,SACE,6CAEF,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,UCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.28e4c982.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const ProjectListBox = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const ProjetListCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 2rem 2rem;\n  border-radius: 0.5rem;\n  border: 1px solid black;\n  height: 12rem;\n  width: 10rem;\n  margin: 0 2rem 1rem 0;\n  transition: all 0.2s ease 0s;\n  overflow: scroll;\n  &:hover {\n    box-shadow: rgba(84, 84, 84, 0.2) 0px 5px 30px;\n  }\n  @media (max-width: 768px) {\n    margin: 0 0 1rem 0;\n  }\n`\n\nexport const ProjectListCardName = styled.p`\n  font-size: 2rem;\n  margin: 0;\n  color: ${(props) => props.color};\n`\n","import styled from 'styled-components'\n\nexport const ProjectItemBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid grey;\n  border-radius: 0.5rem;\n  padding: 0.5rem;\n  cursor: pointer;\n  margin: 0.5rem 0rem;\n`\n\nexport const ProjectItemModalContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n`\n\nexport const ProjectItemModal = styled.div`\n  position: fixed;\n  justify-content: center;\n  align-items: center;\n  width: 30rem;\n  height: 20rem;\n  z-index: 100;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  filter: drop-shadow(4px 4px 4px rgba(0, 0, 0, 0.25));\n  border-radius: 2rem;\n  padding: 1rem;\n  @media (max-width: 768px) {\n    width: 18rem;\n  }\n`\n\nexport const ProjectItemModalCloseButton = styled.div`\n  position: absolute;\n  right: 1rem;\n  cursor: pointer;\n`\n\nexport const ProjectItemModalContent = styled.div`\n  padding: 2rem 1rem;\n`\n\nexport const ProjectItemModalBasicText = styled.p`\n  font-size: 1rem;\n  font-weight: bold;\n`","import React, { useState } from 'react'\n\nimport * as SC from './styles'\n\nfunction ProjectItem(props) {\n  const { data } = props\n\n  const [modalOpen, setModalOpen] = useState(false)\n\n  const handleClick = () => {\n    setModalOpen(!modalOpen)\n  }\n\n  return (\n    <>\n      <SC.ProjectItemBox onClick={handleClick}>\n        <p>{data.content}</p>\n        <p>{data.date}</p>\n      </SC.ProjectItemBox>\n      {modalOpen && (\n        <SC.ProjectItemModalContainer>\n          <SC.ProjectItemModal>\n            <SC.ProjectItemModalCloseButton onClick={handleClick}><img src=\"cancel.png\" alt='Hide modal'></img></SC.ProjectItemModalCloseButton>\n            <SC.ProjectItemModalContent>\n              <SC.ProjectItemModalBasicText>A faire : </SC.ProjectItemModalBasicText>\n              <p>{data.content}</p>\n              <SC.ProjectItemModalBasicText>Pour le : </SC.ProjectItemModalBasicText>\n              <p>{data.date}</p>\n            </SC.ProjectItemModalContent>\n            \n          </SC.ProjectItemModal>\n        </SC.ProjectItemModalContainer>\n      )}\n    </>\n  )\n}\n\nexport default ProjectItem","import React from 'react'\nimport * as SC from './styles'\n\nimport ProjectItem from '../ProjectItem/index'\n\nfunction ProjectItems(props) {\n  const { data } = props\n\n  return (\n    <div>{data.map((d, key) => <ProjectItem key={key} data={d}/> )}</div>\n  )\n}\n\nexport default ProjectItems","import React, { useState, useEffect } from 'react'\nimport * as SC from './styles'\nimport PacmanLoader from \"react-spinners/PacmanLoader\"\n\nimport ProjectItem from '../ProjectItems/index'\n\n\nfunction ProjectList(props) {\n  const { data } = props\n  const [color, setColor] = useState(null)\n  const colorLoader = '#' + Math.floor(Math.random() * 16777215).toString(16)\n\n  const loader = `\n    display: block;\n    margin: 0 auto;\n  `\n\n  useEffect(() => {\n    if (data) { \n      setColor([...Array(Object.keys(data).length).keys()].map((key) => '#' + Math.floor(Math.random() * 16777215).toString(16)))\n    } \n  }, [data])\n\n  return (\n    (data && (\n      <SC.ProjectListBox>\n        {Object.keys(data).map((key, i) => (\n          <>\n            <SC.ProjetListCard key={i}>\n              <SC.ProjectListCardName color={color ? color[i] : '#000'}>{data[key].name}</SC.ProjectListCardName>\n              <ProjectItem data={data[key].tasks} />\n            </SC.ProjetListCard>\n          </>\n        ))}\n      </SC.ProjectListBox>\n    )) || <PacmanLoader color={colorLoader} loading={true} css={loader} size={40}/>\n  )\n}\n\nexport default ProjectList","import React, { useEffect, useState } from 'react';\n\nimport ProjectList from './index';\n\nfunction ProjectListWrapper() {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    fetch(`https://devoir-bot.herokuapp.com/projectWithTask`).then(res => res.json()).then(data => {\n      setData(data.response)\n    })\n  }, [])\n\n  return <ProjectList data={data}/>\n}\n\nexport default ProjectListWrapper","import './App.css'\nimport React from 'react'\n\nimport ProjectListWrapper from './components/ProjectList/wrapper'\n\n\nfunction App() {\n  return (\n    <div className=\"HighWrapper\">\n      <div className=\"Title\">\n        <h1>DevoirBot</h1>\n      </div>\n      <div className=\"ProjectList\">\n        <ProjectListWrapper />\n      </div>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}